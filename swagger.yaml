swagger: '2.0'
info:
  description: Hotel Reservation POC
  version: 1.0.0
  title: Hotel Reservations
  contact:
    email: matt@denvercliffs.com
  license:
    name: MIT license
    url: 'https://opensource.org/licenses/MIT'
host: hotel.mattcliff.net
basePath: /v1
tags:
  - name: hotel
    description: Hotel Information
  - name: room
    description: Room Information
  - name: reservation
    description: Operations about booking
schemes:
  - http
  - https
paths:
  /hotel:
    post:
      tags:
        - hotel
      summary: Add a new hotel to the system
      description: 'ignores id in the body'
      operationId: addHotel
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Hotel object that needs to be added
          required: true
          schema:
            $ref: '#/definitions/Hotel'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Hotel'
        '405':
          description: Invalid input
    put:
      tags:
        - hotel
      summary: Update an existing hotel
      description: 'id is required in the body and must be valid'
      operationId: updateHotel
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Hotel object that needs to be updated
          required: true
          schema:
            $ref: '#/definitions/Hotel'
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid ID supplied
        '404':
          description: Hotel not found
        '405':
          description: Input Validation exception
  '/hotel/{hotelId}':
    get:
      tags:
        - hotel
      summary: Find hotel by ID
      description: Returns a single hotel
      operationId: getHotelById
      produces:
        - application/json
      parameters:
        - name: hotelId
          in: path
          description: ID of hotel to return
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Hotel'
        '400':
          description: Invalid ID supplied
        '404':
          description: Hotel not found
    delete:
      tags:
        - hotel
      summary: Deletes a Hotel
      description: ''
      operationId: deleteHotel
      produces:
        - application/json
      parameters:
        - name: api_key
          in: header
          required: false
          type: string
        - name: hotelId
          in: path
          description: Hotel id to delete
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successfully removed
        '400':
          description: Invalid ID supplied
        '404':
          description: Hotel not found
  '/hotel/{hotelId}/availableRooms':
    get:
      tags:
        - hotel
      summary: returns available rooms
      description: Returns a list of rooms currently available
      operationId: getAvailableRooms
      produces:
        - application/json
      parameters:
        - name: hotelId
          in: path
          description: ID of hotel to return
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Room'
        '400':
          description: Invalid ID supplied
        '404':
          description: Hotel not found
  /room:
    post:
      tags:
        - room
      summary: Add a new room to the system
      description: ''
      operationId: addRoom
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Room object that needs to be added
          required: true
          schema:
            $ref: '#/definitions/Room'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Room'
        '405':
          description: Invalid input
    put:
      tags:
        - room
      summary: Update an existing room
      description: ''
      operationId: updateRoom
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Room object that needs to be updated
          required: true
          schema:
            $ref: '#/definitions/Room'
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid ID supplied
        '404':
          description: Room not found
        '405':
          description: Validation exception
  '/room/{roomId}':
    get:
      tags:
        - room
      summary: Find room by ID
      description: Returns a single room
      operationId: getRoomById
      produces:
        - application/json
      parameters:
        - name: roomId
          in: path
          description: ID of room to return
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Room'
        '400':
          description: Invalid ID supplied
        '404':
          description: Room not found
    delete:
      tags:
        - room
      summary: Deletes a Room
      description: ''
      operationId: deleteRoom
      produces:
        - application/json
      parameters:
        - name: api_key
          in: header
          required: false
          type: string
        - name: roomId
          in: path
          description: Room id to delete
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid ID supplied
        '404':
          description: Hotel not found
  '/room/{roomId}/uploadImage':
    post:
      tags:
        - room
      summary: uploads an image
      description: ''
      operationId: uploadFile
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: roomId
          in: path
          description: ID of room to update
          required: true
          type: integer
          format: int64
        - name: additionalMetadata
          in: formData
          description: Additional data to pass to server
          required: false
          type: string
        - name: file
          in: formData
          description: file to upload
          required: false
          type: file
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ApiResponse'
        '404':
          description: Room not found
  /room/findRoom:
    post:
      tags:
        - room
      summary: finds a room
      description: 'returns list of available rooms that meet the input search critera RoomQuery'
      operationId: findRoom
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Room object that needs to be added
          required: true
          schema:
            $ref: '#/definitions/RoomQuery'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Room'
        '405':
          description: Invalid input
  '/reservation/{reservationId}':
    get:
      tags:
        - reservation
      summary: Find reservation by ID
      description: Returns a single reservation
      operationId: getReservationById
      produces:
        - application/json
      parameters:
        - name: reservationId
          in: path
          description: ID of reservation to return
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Reservation'
        '400':
          description: Invalid ID supplied
        '404':
          description: reservation not found
    delete:
      tags:
        - reservation
      summary: Deletes a reservation
      description: ''
      operationId: deleteReservation
      produces:
        - application/json
      parameters:
        - name: api_key
          in: header
          required: false
          type: string
        - name: reservationId
          in: path
          description: reservation id to delete
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successfully removed
        '400':
          description: Invalid ID supplied
        '404':
          description: reservation not found
  /reservation/bookRoom:
    post:
      tags:
        - reservation
      summary: creates a reservation for the requested room
      description: Returns a list of rooms available
      operationId: bookRoom
      produces:
        - application/json
      parameters:
        - name: hotelId
          in: path
          description: ID of hotel to return
          required: true
          type: integer
          format: int64
        - in: body
          name: body
          description: object that needs to be added
          required: true
          schema:
            $ref: '#/definitions/Reservation'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Reservation'
        '400':
          description: Invalid ID supplied
        '404':
          description: Hotel not found
definitions:
  ApiResponse:
    type: object
    properties:
      code:
        type: integer
        format: int32
      type:
        type: string
      message:
        type: string
  Hotel:
    type: object
    required:
      - name
    properties:
      hotelId:
        type: integer
        format: int64
      name:
        type: string
        example: The Landmark
      address:
        type: string
        example: 123 South Main Street
      city:
        type: string
        example: Denver
      phone:
        type: string
        example: (303) 555-STAY
      stars:
        type: integer
  Room:
    type: object
    required:
      - description
      - photoUrls
    properties:
      roomId:
        type: integer
        format: int64
      hotelId:
        type: integer
        format: int64
      description:
        type: string
        example: 1 bed suite with King
      photoUrls:
        type: array
        items:
          type: string
      startAvailDate:
        type: string
        format: date
      endAvailDate:
        type: string
        format: date
      maxGuests:
        type: integer
  Reservation:
    type: object
    required:
      - roomId
      - startDate
      - endDate
      - guests
    properties:
      reservationId:
        type: integer
        format: int64
      roomId:
        type: string
      startDate:
        type: string
        format: date
      endDate:
        type: string
        format: date
      guests:
        type: array
        items:
          type: object
          properties:
            name:
              type: string
            age:
              type: integer
  RoomQuery:
    type: object
    required:
      - startDate
      - endDate
    properties:
      hotelName:
        type: string
        example: The Landmark
      startDate:
        type: string
        format: date
      endDate:
        type: string
        format: date
      guests:
        type: integer
externalDocs:
  description: Find out more
  url: 'https://github.com/mcliff1/travel'
